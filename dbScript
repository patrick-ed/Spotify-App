USE p_dumdum_db;

DROP TABLE IF EXISTS trackFeature;
DROP TABLE IF EXISTS trackCreatedBy;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS userSavedTracks;
DROP TABLE IF EXISTS genreArtist;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS artist;
DROP TABLE IF EXISTS admin;

CREATE TABLE track (

  trackID VARCHAR(30) NOT NULL ,
  trackName TEXT NOT NULL,
  artist VARCHAR(64) NOT NULL,
  duration VARCHAR(8) NOT NULL,
  albumCover TEXT,
  PRIMARY KEY (trackID)

) ENGINE=InnoDB;


CREATE TABLE users (

  userID VARCHAR(30) NOT NULL,
  username VARCHAR(255) NOT NULL,
  PRIMARY KEY(userID)

) ENGINE=InnoDB;




CREATE TABLE admin (

  adminID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  username VARCHAR(16) NOT NULL,
  password TEXT(256) NOT NULL,
  PRIMARY KEY(adminID)
) ENGINE = InnoDB;

CREATE TABLE trackFeature (

  trackID VARCHAR(30) NOT NULL ,
  acousticness FLOAT,
  danceability FLOAT,
  energy FLOAT,
  instrumentalness FLOAT,
  trackKey FLOAT,
  liveness FLOAT,
  loudness FLOAT,
  mode FLOAT,
  speechiness FLOAT,
  tempo FLOAT,
  time_signature FLOAT,
  valence FLOAT,

  PRIMARY KEY (trackID),
  FOREIGN KEY (trackID) REFERENCES track(trackID)
    ON DELETE RESTRICT ON UPDATE CASCADE

) ENGINE=InnoDB;


CREATE TABLE artist (

  artistID VARCHAR(30) NOT NULL,
  artistName VARCHAR(32) NOT NULL DEFAULT '',
  followers INT NOT NULL DEFAULT 0,
  popularity INT(3) NOT NULL,
  PRIMARY KEY (artistID)

) ENGINE=InnoDB;

CREATE TABLE trackCreatedBy(

  trackID VARCHAR(30) NOT NULL,
  artistID VARCHAR(30) NOT NULL,
  datePublished VARCHAR (10),
  datePrecision VARCHAR(6),
  PRIMARY KEY (trackID,artistID),
  FOREIGN KEY (trackID) REFERENCES track(trackID)
    ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (artistID) REFERENCES artist(artistID)
    ON DELETE RESTRICT ON UPDATE CASCADE

)ENGINE=InnoDB;




CREATE TABLE genreArtist (

  genreID VARCHAR(64) NOT NULL ,
  artistID VARCHAR(30) NOT NULL,
  PRIMARY KEY (genreID,artistID),
  FOREIGN KEY (artistID) REFERENCES artist(artistID)
    ON DELETE RESTRICT ON UPDATE CASCADE

) ENGINE=InnoDB;



CREATE TABLE userSavedTracks (

  trackID VARCHAR(30) NOT NULL,
  userID VARCHAR(30) NOT NULL,
  dateAdded DATE,
  PRIMARY KEY(trackID,userID),
  FOREIGN KEY(trackID) REFERENCES track(trackID)
    ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY(userID) REFERENCES users(userID)
    ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB;

INSERT INTO admin VALUES
(null,"admin",SHA2("",256))
